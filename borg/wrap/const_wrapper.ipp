//----------------------------------------------------------------------------
//! \file const_wrapper.ipp
//! \svn  $Revision: $
//!
//! Declares the abstract::const_wrapper interface.
//----------------------------------------------------------------------------
#ifndef CONST_WRAPPER_IPP
#define CONST_WRAPPER_IPP

//----------------------------------------------------------------------------
//! Define this macro to add function extents (e.g. virtual F = 0).
//----------------------------------------------------------------------------
#ifndef FN
#define FN(F) F
#endif // FN

//----------------------------------------------------------------------------
//! Define this macro to force (non-)constness on all methods.
//----------------------------------------------------------------------------
#ifndef CONST
#define CONST(C) C
#endif // CONST

//----------------------------------------------------------------------------
// Define this macro to override the protection scheme.
//----------------------------------------------------------------------------
#ifndef PROT
#define PROT(P) P
#endif // PROT

//----------------------------------------------------------------------------
//! \name const_wrapper interface:
//----------------------------------------------------------------------------
//@{

PROT( protected ):

//----------------------------------------------------------------------------
//! Get a const reference to the wrapped object.
//----------------------------------------------------------------------------
FN( unwrap_type get() CONST(const) );

//@}

//----------------------------------------------------------------------------
// Undefine customisation macros.
//----------------------------------------------------------------------------
//#undef FN
//#undef CONST
//#undef PROT

//----------------------------------------------------------------------------
// Prevent include recursion, but not multiple inclusion.
//----------------------------------------------------------------------------
#undef CONST_WRAPPER_IPP
#endif // CONST_WRAPPER_IPP
